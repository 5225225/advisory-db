<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2021-11-14T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2021-0123: Vulnerability in fruity</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0123.html</id><updated>2021-11-14T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0123.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0123: Vulnerability in fruity"/><published>2021-11-14T00:00:00+00:00</published><summary xml:lang="en">Converting `NSString` to a String Truncates at Null Bytes</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/fruity/RUSTSEC-2021-0123.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/fruity/RUSTSEC-2021-0123.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0123
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Converting &lt;code&gt;NSString&lt;/code&gt; to a String Truncates at Null Bytes&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-11-14&quot;&gt;
          November 14, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/fruity.html&quot;&gt;fruity&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/fruity&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nvzqz&amp;#x2f;fruity&amp;#x2f;issues&amp;#x2f;14&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nvzqz&amp;#x2f;fruity&amp;#x2f;issues&amp;#x2f;14
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_str&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_str_with_nul&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_string&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;fruity::foundation::NSString::to_string_with_nul&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Methods of &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; for conversion to a string may return a partial result.
Since they call &lt;a href=&quot;https://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_ptr&quot;&gt;&lt;code&gt;CStr::from_ptr&lt;/code&gt;&lt;/a&gt; on a pointer to the string buffer, the
string is terminated at the first null byte, which might not be the end of the
string.&lt;/p&gt;
&lt;p&gt;In addition to the vulnerable functions listed for this issue, the
implementations of &lt;a href=&quot;https://doc.rust-lang.org/std/fmt/trait.Display.html&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/std/cmp/trait.PartialEq.html&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://doc.rust-lang.org/std/string/trait.ToString.html&quot;&gt;&lt;code&gt;ToString&lt;/code&gt;&lt;/a&gt;
for &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; are also affected, since they call those functions.&lt;/p&gt;
&lt;h2&gt;Impact&lt;/h2&gt;
&lt;p&gt;Since &lt;a href=&quot;https://docs.rs/fruity/0.2.0/fruity/foundation/struct.NSString.html&quot;&gt;&lt;code&gt;NSString&lt;/code&gt;&lt;/a&gt; is commonly used as the type for paths by the &lt;a href=&quot;https://developer.apple.com/documentation/foundation&quot;&gt;Foundation&lt;/a&gt;
framework, null byte truncation might allow for easily bypassing file extension
checks. For example, if a file name is provided by a user and validated to have
one of a specific set of extensions, with validation taking place before
truncation, an attacker can add an accepted extension after a null byte (e.g.,
&lt;code&gt;file.exe\0.txt&lt;/code&gt;). After truncation, the file name used by the application
would be &lt;code&gt;file.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It would be better to generate unique names for files, instead of using
user-provided names, but not all applications take this approach.&lt;/p&gt;
&lt;h2&gt;Example:&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;let string = NSString::from_str(&amp;quot;null\0byte&amp;quot;);
println!(&amp;quot;{}&amp;quot;, string);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That example only prints the string &amp;quot;null&amp;quot;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0122: Vulnerability in flatbuffers</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0122.html</id><updated>2021-10-31T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0122.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0122: Vulnerability in flatbuffers"/><published>2021-10-31T00:00:00+00:00</published><summary xml:lang="en">Generated code can read and write out of bounds in safe code</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/flatbuffers/RUSTSEC-2021-0122.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/flatbuffers/RUSTSEC-2021-0122.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0122
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Generated code can read and write out of bounds in safe code&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-10-31&quot;&gt;
          October 31, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/flatbuffers.html&quot;&gt;flatbuffers&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/flatbuffers&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;google&amp;#x2f;flatbuffers&amp;#x2f;issues&amp;#x2f;6627&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;google&amp;#x2f;flatbuffers&amp;#x2f;issues&amp;#x2f;6627
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      
      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;9.8 &lt;span class=&quot;tag critical&quot;&gt;
        CRITICAL
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1&amp;#x2f;AV:N&amp;#x2f;AC:L&amp;#x2f;PR:N&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:H&amp;#x2f;I:H&amp;#x2f;A:H&quot;&gt;CVSS:3.1&amp;#x2f;AV:N&amp;#x2f;AC:L&amp;#x2f;PR:N&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:H&amp;#x2f;I:H&amp;#x2f;A:H&lt;/a&gt;&lt;/dd&gt;
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Code generated by flatbuffers&apos; compiler is &lt;code&gt;unsafe&lt;/code&gt; but not marked as such.
See https://github.com/google/flatbuffers/issues/6627 for details.&lt;/p&gt;
&lt;p&gt;All users that use generated code by &lt;code&gt;flatbuffers&lt;/code&gt; compiler are recommended to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;not expose flatbuffer generated code as part of their public APIs&lt;/li&gt;
&lt;li&gt;audit their code and look for any usage of &lt;code&gt;follow&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, or any method that uses them
(e.g. &lt;code&gt;self_follow&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Carefuly go through the crates&apos; documentation to understand which &amp;quot;safe&amp;quot; APIs are not
intended to be used.&lt;/li&gt;
&lt;/ol&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0120: Unsoundness in abomonation</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0120.html</id><updated>2021-10-17T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0120.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0120: Unsoundness in abomonation"/><published>2021-10-17T00:00:00+00:00</published><summary xml:lang="en">abomonation transmutes &amp;amp;T to and from &amp;amp;[u8] without sufficient constraints</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/abomonation/RUSTSEC-2021-0120.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/abomonation/RUSTSEC-2021-0120.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0120
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;abomonation transmutes &amp;amp;T to and from &amp;amp;[u8] without sufficient constraints&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-10-17&quot;&gt;
          October 17, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/abomonation.html&quot;&gt;abomonation&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/abomonation&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;TimelyDataflow&amp;#x2f;abomonation&amp;#x2f;issues&amp;#x2f;23&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;TimelyDataflow&amp;#x2f;abomonation&amp;#x2f;issues&amp;#x2f;23
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;This transmute is at the core of the abomonation crates. It&apos;s so easy to use it to violate alignment requirements that no test in the crate&apos;s test suite passes under miri.
The use of this transmute in serialization/deserialization also incorrectly assumes that the layout of a repr(Rust) type is stable.
This transmute can also disclose both the contents of padding bytes which may be an information leak and the contents of pointers, which may be used to defeat ASLR.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0121: Unsoundness in crypto2</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0121.html</id><updated>2021-10-08T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0121.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0121: Unsoundness in crypto2"/><published>2021-10-08T00:00:00+00:00</published><summary xml:lang="en">Non-aligned u32 read in Chacha20 encryption and decryption</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/crypto2/RUSTSEC-2021-0121.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/crypto2/RUSTSEC-2021-0121.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0121
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Non-aligned u32 read in Chacha20 encryption and decryption&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-10-08&quot;&gt;
          October  8, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/crypto2.html&quot;&gt;crypto2&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/crypto2&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/crypto.html&quot;&gt;#crypto&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/alignment.html&quot;&gt;#alignment&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;shadowsocks&amp;#x2f;crypto2&amp;#x2f;issues&amp;#x2f;27&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;shadowsocks&amp;#x2f;crypto2&amp;#x2f;issues&amp;#x2f;27
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/crypto.html&quot;&gt;#crypto&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/alignment.html&quot;&gt;#alignment&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/unsound.html&quot;&gt;#unsound&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;crypto2::streamcipher::Chacha20::decrypt_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;crypto2::streamcipher::Chacha20::encrypt_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;crypto2::streamcipher::xor_si512_inplace&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The implementation does not enforce alignment requirements on input slices while incorrectly assuming 4-byte alignment through an unsafe call to &lt;code&gt;std::slice::from_raw_parts_mut&lt;/code&gt;, which breaks the contract and introduces undefined behavior.&lt;/p&gt;
&lt;p&gt;This affects Chacha20 encryption and decryption in crypto2.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0119: Vulnerability in nix</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0119.html</id><updated>2021-09-27T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0119.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0119: Vulnerability in nix"/><published>2021-09-27T00:00:00+00:00</published><summary xml:lang="en">Out-of-bounds write in nix::unistd::getgrouplist</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/nix/RUSTSEC-2021-0119.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/nix/RUSTSEC-2021-0119.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0119
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Out-of-bounds write in nix::unistd::getgrouplist&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-27&quot;&gt;
          September 27, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/nix.html&quot;&gt;nix&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/nix&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/nss.html&quot;&gt;#nss&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nix-rust&amp;#x2f;nix&amp;#x2f;issues&amp;#x2f;1541&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;nix-rust&amp;#x2f;nix&amp;#x2f;issues&amp;#x2f;1541
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.20.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.21.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;^0.22.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.23.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.16.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/nss.html&quot;&gt;#nss&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;linux&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;freebsd&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;android&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;netbsd&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;dragonfly&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;openbsd&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;fuchsia&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;nix::unistd::getgrouplist&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.16.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;On certain platforms, if a user has more than 16 groups, the
&lt;code&gt;nix::unistd::getgrouplist&lt;/code&gt; function will call the libc &lt;code&gt;getgrouplist&lt;/code&gt;
function with a length parameter greater than the size of the buffer it
provides, resulting in an out-of-bounds write and memory corruption.&lt;/p&gt;
&lt;p&gt;The libc &lt;code&gt;getgrouplist&lt;/code&gt; function takes an in/out parameter &lt;code&gt;ngroups&lt;/code&gt;
specifying the size of the group buffer. When the buffer is too small to
hold all of the reqested user&apos;s group memberships, some libc
implementations, including glibc and Solaris libc, will modify &lt;code&gt;ngroups&lt;/code&gt;
to indicate the actual number of groups for the user, in addition to
returning an error. The version of &lt;code&gt;nix::unistd::getgrouplist&lt;/code&gt; in nix
0.16.0 and up will resize the buffer to twice its size, but will not
read or modify the &lt;code&gt;ngroups&lt;/code&gt; variable. Thus, if the user has more than
twice as many groups as the initial buffer size of 8, the next call to
&lt;code&gt;getgrouplist&lt;/code&gt; will then write past the end of the buffer.&lt;/p&gt;
&lt;p&gt;The issue would require editing /etc/groups to exploit, which is usually
only editable by the root user.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0115: Vulnerability in zeroize_derive</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0115.html</id><updated>2021-09-24T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0115.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0115: Vulnerability in zeroize_derive"/><published>2021-09-24T00:00:00+00:00</published><summary xml:lang="en">`#[zeroize(drop)]` doesn&amp;apos;t implement `Drop` for `enum`s</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/zeroize_derive/RUSTSEC-2021-0115.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/zeroize_derive/RUSTSEC-2021-0115.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0115
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;#[zeroize(drop)]&lt;/code&gt; doesn&apos;t implement &lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;enum&lt;/code&gt;s&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-24&quot;&gt;
          September 24, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/zeroize_derive.html&quot;&gt;zeroize_derive&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/zeroize_derive&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;iqlusioninc&amp;#x2f;crates&amp;#x2f;issues&amp;#x2f;876&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;iqlusioninc&amp;#x2f;crates&amp;#x2f;issues&amp;#x2f;876
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.1.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected versions of this crate did not implement &lt;code&gt;Drop&lt;/code&gt; when &lt;code&gt;#[zeroize(drop)]&lt;/code&gt; was used on an &lt;code&gt;enum&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can result in memory not being zeroed out after dropping it, which is exactly what is intended when adding this attribute.&lt;/p&gt;
&lt;p&gt;The flaw was corrected in version 1.2 and &lt;code&gt;#[zeroize(drop)]&lt;/code&gt; on &lt;code&gt;enum&lt;/code&gt;s now properly implements &lt;code&gt;Drop&lt;/code&gt;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0114: Vulnerability in nanorand</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0114.html</id><updated>2021-09-23T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0114.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0114: Vulnerability in nanorand"/><published>2021-09-23T00:00:00+00:00</published><summary xml:lang="en">Aliased mutable references from `tls_rand` &amp;amp; `TlsWyRand`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/nanorand/RUSTSEC-2021-0114.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/nanorand/RUSTSEC-2021-0114.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0114
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Aliased mutable references from &lt;code&gt;tls_rand&lt;/code&gt; &amp;amp; &lt;code&gt;TlsWyRand&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-23&quot;&gt;
          September 23, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/nanorand.html&quot;&gt;nanorand&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/nanorand&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-safety.html&quot;&gt;#memory-safety&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/aliasing.html&quot;&gt;#aliasing&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Absolucy&amp;#x2f;nanorand-rs&amp;#x2f;issues&amp;#x2f;28&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Absolucy&amp;#x2f;nanorand-rs&amp;#x2f;issues&amp;#x2f;28
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.5.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory-safety.html&quot;&gt;#memory-safety&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/aliasing.html&quot;&gt;#aliasing&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;nanorand::tls::tls_rand&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;TlsWyRand&lt;/code&gt;&apos;s implementation of &lt;code&gt;Deref&lt;/code&gt; unconditionally dereferences a raw pointer, and returns
multiple mutable references to the same object, which is undefined behavior.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0110: Vulnerability in wasmtime</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0110.html</id><updated>2021-09-17T00:00:00+00:00</updated><category term="memory-corruption"/><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0110.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0110: Vulnerability in wasmtime"/><published>2021-09-17T00:00:00+00:00</published><summary xml:lang="en">Multiple Vulnerabilities in Wasmtime</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime/RUSTSEC-2021-0110.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime/RUSTSEC-2021-0110.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0110
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Multiple Vulnerabilities in Wasmtime&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-17&quot;&gt;
          September 17, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/wasmtime.html&quot;&gt;wasmtime&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/wasmtime&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds-read.html&quot;&gt;#out-of-bounds-read&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds-write.html&quot;&gt;#out-of-bounds-write&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/Wasm.html&quot;&gt;#Wasm&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/garbage-collection.html&quot;&gt;#garbage-collection&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39216&quot;&gt;CVE-2021-39216&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39219&quot;&gt;CVE-2021-39219&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            
            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39218&quot;&gt;CVE-2021-39218&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      

      
      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;6.3 &lt;span class=&quot;tag medium&quot;&gt;
        MEDIUM
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;High&lt;/d&gt;
          

          
          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1&amp;#x2f;AV:L&amp;#x2f;AC:H&amp;#x2f;PR:L&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:N&amp;#x2f;I:H&amp;#x2f;A:H&quot;&gt;CVSS:3.1&amp;#x2f;AV:L&amp;#x2f;AC:H&amp;#x2f;PR:L&amp;#x2f;UI:N&amp;#x2f;S:U&amp;#x2f;C:N&amp;#x2f;I:H&amp;#x2f;A:H&lt;/a&gt;&lt;/dd&gt;
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.30.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds-read.html&quot;&gt;#out-of-bounds-read&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds-write.html&quot;&gt;#out-of-bounds-write&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/Wasm.html&quot;&gt;#Wasm&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/garbage-collection.html&quot;&gt;#garbage-collection&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
      

      
      
      
    &lt;/dl&gt;

    
    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;wasmtime::Linker::func_new&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;wasmtime::Linker::func_wrap&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;wasmtime::Store::gc&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf&quot;&gt;Use after free passing &lt;code&gt;externref&lt;/code&gt;s to Wasm in
Wasmtime&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49&quot;&gt;Out-of-bounds read/write and invalid free with &lt;code&gt;externref&lt;/code&gt;s and GC safepoints
in
Wasmtime&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx&quot;&gt;Wrong type for &lt;code&gt;Linker&lt;/code&gt;-define functions when used across two
&lt;code&gt;Engine&lt;/code&gt;s&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0111: Vulnerability in tremor-script</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0111.html</id><updated>2021-09-16T00:00:00+00:00</updated><category term="memory-corruption"/><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0111.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0111: Vulnerability in tremor-script"/><published>2021-09-16T00:00:00+00:00</published><summary xml:lang="en">Memory Safety Issue when using `patch` or `merge` on `state` and assign the result back to `state`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tremor-script/RUSTSEC-2021-0111.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tremor-script/RUSTSEC-2021-0111.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0111
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Memory Safety Issue when using &lt;code&gt;patch&lt;/code&gt; or &lt;code&gt;merge&lt;/code&gt; on &lt;code&gt;state&lt;/code&gt; and assign the result back to &lt;code&gt;state&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-16&quot;&gt;
          September 16, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/tremor-script.html&quot;&gt;tremor-script&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/tremor-script&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tremor-rs&amp;#x2f;tremor-runtime&amp;#x2f;pull&amp;#x2f;1217&quot;&gt;
          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tremor-rs&amp;#x2f;tremor-runtime&amp;#x2f;pull&amp;#x2f;1217
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.6&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.7.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected versions of this crate maintains references to memory that might have been freed already.
If affects the following two &lt;code&gt;tremor-script&lt;/code&gt; language constructs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#merge&quot;&gt;Merge&lt;/a&gt; where we assign the result back to the target expression
and the expression to be merged needs to reference the &lt;code&gt;event&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let state = merge state of event end;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#patch&quot;&gt;Patch&lt;/a&gt; where we assign the result back to the target expression
and the patch operations used need to reference the &lt;code&gt;event&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let state = patch state of insert event.key =&amp;gt; event.value end;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For constructs like this (it doesnt matter what is references in the expression to be merged or the patch operations) an optimization
was applied to manipulate the target value in-place, instead of cloning it.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;Value&lt;/code&gt; struct which underpins all event data in &lt;code&gt;tremor-script&lt;/code&gt;, is representing as borrowed strings &lt;code&gt;beef::Cow&amp;lt;&apos;lifetime, str&amp;gt;&lt;/code&gt;
that reference the actual &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; the event is based upon. We keep the raw byte-array next to the event structure inside our &lt;code&gt;Event&lt;/code&gt; struct as a self-referential struct,
so we make sure that the structured &lt;code&gt;Value&lt;/code&gt; and its references are valid across its whole lifetime.&lt;/p&gt;
&lt;p&gt;The optimization was considered safe as long as it was only possible to merge or patche &lt;code&gt;event&lt;/code&gt; data or static data.
When &lt;code&gt;state&lt;/code&gt; was introduced to &lt;code&gt;tremor-script&lt;/code&gt; a new possibility existed, to keep &lt;code&gt;Value&lt;/code&gt; data around for longer than the lifetime of an event.
If &lt;code&gt;event&lt;/code&gt; data is merged or patched into &lt;code&gt;state&lt;/code&gt; without cloning &lt;code&gt;state&lt;/code&gt; first, it can still reference keys or values from
the previous event, which will now be invalid. This allows access to those already freed regions of memory and to get their content out over the wire.&lt;/p&gt;
&lt;h2&gt;Workaround&lt;/h2&gt;
&lt;p&gt;If an upgrade is not possible, a possible workaround is to avoid the optimization
by introducing a temporary variable and not immediately reassigning to &lt;code&gt;state&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let tmp = merge state of event end;
let state = tmp
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Fix&lt;/h2&gt;
&lt;p&gt;The flaw was corrected in &lt;code&gt;tremor-script&lt;/code&gt; version 0.11.6 via commit &lt;a href=&quot;https://github.com/tremor-rs/tremor-runtime/commit/1a2efcdbe68e5e7fd0a05836ac32d2cde78a0b2e&quot;&gt;1a2efcd&lt;/a&gt; by removing the optimization
and always clone the target expression of a &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#merge&quot;&gt;Merge&lt;/a&gt; or [Patch](https://www.tremor.rs/docs/tremor-script/index#patch.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0116: Vulnerability in arrow</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0116.html</id><updated>2021-09-14T00:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0116.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0116: Vulnerability in arrow"/><published>2021-09-14T00:00:00+00:00</published><summary xml:lang="en">`BinaryArray` does not perform bound checks on reading values and offsets</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/arrow/RUSTSEC-2021-0116.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/arrow/RUSTSEC-2021-0116.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        
        RUSTSEC-2021-0116
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;BinaryArray&lt;/code&gt; does not perform bound checks on reading values and offsets&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    
    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2021-09-14&quot;&gt;
          September 14, 2021
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        
        &lt;a href=&quot;/packages/arrow.html&quot;&gt;arrow&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/arrow&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/buffer-overflow.html&quot;&gt;#buffer-overflow&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      

      
      

      
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/buffer-overflow.html&quot;&gt;#buffer-overflow&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      
      
    &lt;/dl&gt;

    

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;BinaryArray&lt;/code&gt; performs insufficient validation on creation, which allows out-of-bounds reads in safe code.&lt;/p&gt;

  &lt;/article&gt;</content></entry></feed>