<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2021-09-24T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle>Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2021-0115: Vulnerability in zeroize_derive</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0115.html</id><updated>2021-09-24T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0115.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0115: Vulnerability in zeroize_derive"/><published>2021-09-24T00:00:00+00:00</published><summary>`#[zeroize(drop)]` doesn&apos;t implement `Drop` for `enum`s</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0115&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;#[zeroize(drop)]&lt;/code&gt; doesn&apos;t implement &lt;code&gt;Drop&lt;/code&gt; for &lt;code&gt;enum&lt;/code&gt;s&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-24&quot;&gt;&#xA;          September 24, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/zeroize_derive.html&quot;&gt;zeroize_derive&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/zeroize_derive&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;iqlusioninc&amp;#x2f;crates&amp;#x2f;issues&amp;#x2f;876&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;iqlusioninc&amp;#x2f;crates&amp;#x2f;issues&amp;#x2f;876&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=1.2.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;Affected versions of this crate did not implement &lt;code&gt;Drop&lt;/code&gt; when &lt;code&gt;#[zeroize(drop)]&lt;/code&gt; was used on an &lt;code&gt;enum&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This can result in memory not being zeroed out after dropping it, which is exactly what is intended when adding this attribute.&lt;/p&gt;&#xA;&lt;p&gt;The flaw was corrected in version 1.2 and &lt;code&gt;#[zeroize(drop)]&lt;/code&gt; on &lt;code&gt;enum&lt;/code&gt;s now properly implements &lt;code&gt;Drop&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/zeroize_derive/RUSTSEC-2021-0115.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/zeroize_derive/RUSTSEC-2021-0115.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0114: Vulnerability in nanorand</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0114.html</id><updated>2021-09-23T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0114.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0114: Vulnerability in nanorand"/><published>2021-09-23T00:00:00+00:00</published><summary>Aliased mutable references from `tls_rand` &amp; `TlsWyRand`</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0114&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Aliased mutable references from &lt;code&gt;tls_rand&lt;/code&gt; &amp;amp; &lt;code&gt;TlsWyRand&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-23&quot;&gt;&#xA;          September 23, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/nanorand.html&quot;&gt;nanorand&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/nanorand&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Absolucy&amp;#x2f;nanorand-rs&amp;#x2f;issues&amp;#x2f;28&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Absolucy&amp;#x2f;nanorand-rs&amp;#x2f;issues&amp;#x2f;28&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.1&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.5.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-safety&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;aliasing&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;    &#xA;    &#xA;    &lt;dl&gt;&#xA;      &lt;dt&gt;Affected Functions&lt;/dt&gt;&#xA;      &lt;dd&gt;Version&lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;nanorand::tls::tls_rand&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;=0.6.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;    &lt;/dl&gt;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;&lt;code&gt;TlsWyRand&lt;/code&gt;&apos;s implementation of &lt;code&gt;Deref&lt;/code&gt; unconditionally dereferences a raw pointer, and returns&#xA;multiple mutable references to the same object, which is undefined behavior.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/nanorand/RUSTSEC-2021-0114.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/nanorand/RUSTSEC-2021-0114.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0110: Vulnerability in wasmtime</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0110.html</id><updated>2021-09-17T00:00:00+00:00</updated><category term="memory-corruption"/><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0110.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0110: Vulnerability in wasmtime"/><published>2021-09-17T00:00:00+00:00</published><summary>Multiple Vulnerabilities in Wasmtime</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0110&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Multiple Vulnerabilities in Wasmtime&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-17&quot;&gt;&#xA;          September 17, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/wasmtime.html&quot;&gt;wasmtime&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/wasmtime&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-corruption&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;memory-exposure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39216&quot;&gt;CVE-2021-39216&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39219&quot;&gt;CVE-2021-39219&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-39218&quot;&gt;CVE-2021-39218&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.30.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;use-after-free&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;out-of-bounds read&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;out-of-bounds write&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;Wasm&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;garbage collection&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;    &#xA;    &#xA;    &lt;dl&gt;&#xA;      &lt;dt&gt;Affected Functions&lt;/dt&gt;&#xA;      &lt;dd&gt;Version&lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;wasmtime::Linker::func_new&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;wasmtime::Linker::func_wrap&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;wasmtime::Store::gc&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.30.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;    &lt;/dl&gt;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-v4cp-h94r-m7xf&quot;&gt;Use after free passing &lt;code&gt;externref&lt;/code&gt;s to Wasm in&#xA;Wasmtime&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49&quot;&gt;Out-of-bounds read/write and invalid free with &lt;code&gt;externref&lt;/code&gt;s and GC safepoints&#xA;in&#xA;Wasmtime&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&quot;https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx&quot;&gt;Wrong type for &lt;code&gt;Linker&lt;/code&gt;-define functions when used across two&#xA;&lt;code&gt;Engine&lt;/code&gt;s&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/wasmtime/RUSTSEC-2021-0110.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/wasmtime/RUSTSEC-2021-0110.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0111: Vulnerability in tremor-script</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0111.html</id><updated>2021-09-16T00:00:00+00:00</updated><category term="memory-corruption"/><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0111.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0111: Vulnerability in tremor-script"/><published>2021-09-16T00:00:00+00:00</published><summary>Memory Safety Issue when using `patch` or `merge` on `state` and assign the result back to `state`</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0111&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Memory Safety Issue when using &lt;code&gt;patch&lt;/code&gt; or &lt;code&gt;merge&lt;/code&gt; on &lt;code&gt;state&lt;/code&gt; and assign the result back to &lt;code&gt;state&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-16&quot;&gt;&#xA;          September 16, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/tremor-script.html&quot;&gt;tremor-script&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/tremor-script&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-corruption&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;memory-exposure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tremor-rs&amp;#x2f;tremor-runtime&amp;#x2f;pull&amp;#x2f;1217&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;tremor-rs&amp;#x2f;tremor-runtime&amp;#x2f;pull&amp;#x2f;1217&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.11.6&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;=0.7.2&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;Affected versions of this crate maintains references to memory that might have been freed already.&#xA;If affects the following two &lt;code&gt;tremor-script&lt;/code&gt; language constructs:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#merge&quot;&gt;Merge&lt;/a&gt; where we assign the result back to the target expression&#xA;and the expression to be merged needs to reference the &lt;code&gt;event&lt;/code&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code&gt;let state = merge state of event end;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#patch&quot;&gt;Patch&lt;/a&gt; where we assign the result back to the target expression&#xA;and the patch operations used need to reference the &lt;code&gt;event&lt;/code&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code&gt;let state = patch state of insert event.key =&amp;gt; event.value end;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;For constructs like this (it doesnt matter what is references in the expression to be merged or the patch operations) an optimization&#xA;was applied to manipulate the target value in-place, instead of cloning it.&lt;/p&gt;&#xA;&lt;p&gt;Our &lt;code&gt;Value&lt;/code&gt; struct which underpins all event data in &lt;code&gt;tremor-script&lt;/code&gt;, is representing as borrowed strings &lt;code&gt;beef::Cow&amp;lt;&apos;lifetime, str&amp;gt;&lt;/code&gt;&#xA;that reference the actual &lt;code&gt;Vec&amp;lt;u8&amp;gt;&lt;/code&gt; the event is based upon. We keep the raw byte-array next to the event structure inside our &lt;code&gt;Event&lt;/code&gt; struct as a self-referential struct,&#xA;so we make sure that the structured &lt;code&gt;Value&lt;/code&gt; and its references are valid across its whole lifetime.&lt;/p&gt;&#xA;&lt;p&gt;The optimization was considered safe as long as it was only possible to merge or patche &lt;code&gt;event&lt;/code&gt; data or static data.&#xA;When &lt;code&gt;state&lt;/code&gt; was introduced to &lt;code&gt;tremor-script&lt;/code&gt; a new possibility existed, to keep &lt;code&gt;Value&lt;/code&gt; data around for longer than the lifetime of an event.&#xA;If &lt;code&gt;event&lt;/code&gt; data is merged or patched into &lt;code&gt;state&lt;/code&gt; without cloning &lt;code&gt;state&lt;/code&gt; first, it can still reference keys or values from&#xA;the previous event, which will now be invalid. This allows access to those already freed regions of memory and to get their content out over the wire.&lt;/p&gt;&#xA;&lt;h2&gt;Workaround&lt;/h2&gt;&#xA;&lt;p&gt;If an upgrade is not possible, a possible workaround is to avoid the optimization&#xA;by introducing a temporary variable and not immediately reassigning to &lt;code&gt;state&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;let tmp = merge state of event end;&#xA;let state = tmp&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2&gt;Fix&lt;/h2&gt;&#xA;&lt;p&gt;The flaw was corrected in &lt;code&gt;tremor-script&lt;/code&gt; version 0.11.6 via commit &lt;a href=&quot;https://github.com/tremor-rs/tremor-runtime/commit/1a2efcdbe68e5e7fd0a05836ac32d2cde78a0b2e&quot;&gt;1a2efcd&lt;/a&gt; by removing the optimization&#xA;and always clone the target expression of a &lt;a href=&quot;https://www.tremor.rs/docs/tremor-script/index#merge&quot;&gt;Merge&lt;/a&gt; or [Patch](https://www.tremor.rs/docs/tremor-script/index#patch.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tremor-script/RUSTSEC-2021-0111.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tremor-script/RUSTSEC-2021-0111.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0117: Vulnerability in arrow</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0117.html</id><updated>2021-09-14T00:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0117.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0117: Vulnerability in arrow"/><published>2021-09-14T00:00:00+00:00</published><summary>`DecimalArray` does not perform bound checks on accessing values and offsets</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0117&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;DecimalArray&lt;/code&gt; does not perform bound checks on accessing values and offsets&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-14&quot;&gt;&#xA;          September 14, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/arrow.html&quot;&gt;arrow&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/arrow&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-exposure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;apache&amp;#x2f;arrow-rs&amp;#x2f;issues&amp;#x2f;775&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;apache&amp;#x2f;arrow-rs&amp;#x2f;issues&amp;#x2f;775&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;buffer-overflow&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;&lt;code&gt;DecimalArray&lt;/code&gt; performs insufficient bounds checks,&#xA;which allows out-of-bounds reads in safe code&#xA;if the lenght of the backing buffer is not a multiple of 16.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/arrow/RUSTSEC-2021-0117.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/arrow/RUSTSEC-2021-0117.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0118: Vulnerability in arrow</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0118.html</id><updated>2021-09-14T00:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0118.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0118: Vulnerability in arrow"/><published>2021-09-14T00:00:00+00:00</published><summary>`FixedSizeBinaryArray` does not perform bound checks on accessing values and offsets</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0118&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;FixedSizeBinaryArray&lt;/code&gt; does not perform bound checks on accessing values and offsets&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-14&quot;&gt;&#xA;          September 14, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/arrow.html&quot;&gt;arrow&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/arrow&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-exposure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;apache&amp;#x2f;arrow-rs&amp;#x2f;issues&amp;#x2f;774&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;apache&amp;#x2f;arrow-rs&amp;#x2f;issues&amp;#x2f;774&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;buffer-overflow&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;&lt;code&gt;FixedSizeBinaryArray&lt;/code&gt; performs insufficient bounds checks, which allows out-of-bounds reads in safe code.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/arrow/RUSTSEC-2021-0118.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/arrow/RUSTSEC-2021-0118.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0116: Vulnerability in arrow</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0116.html</id><updated>2021-09-14T00:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0116.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0116: Vulnerability in arrow"/><published>2021-09-14T00:00:00+00:00</published><summary>`BinaryArray` does not perform bound checks on reading values and offsets</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0116&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;BinaryArray&lt;/code&gt; does not perform bound checks on reading values and offsets&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-14&quot;&gt;&#xA;          September 14, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/arrow.html&quot;&gt;arrow&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/arrow&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-exposure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;buffer-overflow&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;&lt;code&gt;BinaryArray&lt;/code&gt; performs insufficient validation on creation, which allows out-of-bounds reads in safe code.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/arrow/RUSTSEC-2021-0116.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/arrow/RUSTSEC-2021-0116.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0100: Vulnerability in sha2</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0100.html</id><updated>2021-09-08T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0100.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0100: Vulnerability in sha2"/><published>2021-09-08T00:00:00+00:00</published><summary>Miscomputed results when using AVX2 backend</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0100&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Miscomputed results when using AVX2 backend&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-08&quot;&gt;&#xA;          September  8, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/sha2.html&quot;&gt;sha2&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/sha2&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;RustCrypto&amp;#x2f;hashes&amp;#x2f;pull&amp;#x2f;314&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;RustCrypto&amp;#x2f;hashes&amp;#x2f;pull&amp;#x2f;314&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.8&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.7&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;cryptography&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;The v0.9.7 release of the &lt;code&gt;sha2&lt;/code&gt; crate introduced a new AVX2-accelerated&#xA;backend which was automatically enabled for all x86/x86_64 CPUs where AVX2&#xA;support was autodetected at runtime.&lt;/p&gt;&#xA;&lt;p&gt;This backend was buggy and would miscompute results for long messages&#xA;(i.e. messages spanning multiple SHA blocks).&lt;/p&gt;&#xA;&lt;p&gt;The crate has since been yanked, but any users who upgraded to v0.9.7 should&#xA;immediately upgrade to v0.9.8 and recompute any hashes which were previously&#xA;computed by v0.9.7.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/sha2/RUSTSEC-2021-0100.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/sha2/RUSTSEC-2021-0100.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0099: cosmos_sdk is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0099.html</id><updated>2021-08-25T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0099.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0099: cosmos_sdk is unmaintained"/><published>2021-08-25T00:00:00+00:00</published><summary>Crate has been renamed to `cosmrs`</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0099&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Crate has been renamed to &lt;code&gt;cosmrs&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-25&quot;&gt;&#xA;          August 25, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/cosmos_sdk.html&quot;&gt;cosmos_sdk&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/cosmos_sdk&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Unmaintained&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;cosmos&amp;#x2f;cosmos-rust&amp;#x2f;issues&amp;#x2f;113&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;cosmos&amp;#x2f;cosmos-rust&amp;#x2f;issues&amp;#x2f;113&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;The &lt;code&gt;cosmos_sdk&lt;/code&gt; crate, which provides a basic Rust SDK for the Cosmos ecosystem,&#xA;has rebranded to “CosmRS” in the spirit of other projects like CosmJS and CosmWasm.&lt;/p&gt;&#xA;&lt;p&gt;You can find the new home here:&lt;/p&gt;&#xA;&lt;p&gt;https://github.com/cosmos/cosmos-rust/tree/main/cosmrs&lt;/p&gt;&#xA;&lt;p&gt;The new crate name is &lt;code&gt;cosmrs&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;https://crates.io/crates/cosmrs&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmos_sdk/RUSTSEC-2021-0099.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmos_sdk/RUSTSEC-2021-0099.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0098: Vulnerability in openssl-src</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0098.html</id><updated>2021-08-24T00:00:00+00:00</updated><category term="denial-of-service"/><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0098.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0098: Vulnerability in openssl-src"/><published>2021-08-24T00:00:00+00:00</published><summary>Read buffer overruns processing ASN.1 strings</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0098&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Read buffer overruns processing ASN.1 strings&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-24&quot;&gt;&#xA;          August 24, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/openssl-src.html&quot;&gt;openssl-src&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/openssl-src&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;denial-of-service&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-3712&quot;&gt;CVE-2021-3712&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=111.16&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING&#xA;structure which contains a buffer holding the string data and a field holding&#xA;the buffer length. This contrasts with normal C strings which are represented as&#xA;a buffer for the string data which is terminated with a NUL (0) byte.&lt;/p&gt;&#xA;&lt;p&gt;Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL&apos;s&#xA;own &amp;quot;d2i&amp;quot; functions (and other similar parsing functions) as well as any string&#xA;whose value has been set with the ASN1_STRING_set() function will additionally&#xA;NUL terminate the byte array in the ASN1_STRING structure.&lt;/p&gt;&#xA;&lt;p&gt;However, it is possible for applications to directly construct valid ASN1_STRING&#xA;structures which do not NUL terminate the byte array by directly setting the&#xA;&amp;quot;data&amp;quot; and &amp;quot;length&amp;quot; fields in the ASN1_STRING array. This can also happen by&#xA;using the &lt;code&gt;ASN1_STRING_set0()&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;Numerous OpenSSL functions that print ASN.1 data have been found to assume that&#xA;the ASN1_STRING byte array will be NUL terminated, even though this is not&#xA;guaranteed for strings that have been directly constructed. Where an application&#xA;requests an ASN.1 structure to be printed, and where that ASN.1 structure&#xA;contains ASN1_STRINGs that have been directly constructed by the application&#xA;without NUL terminating the &amp;quot;data&amp;quot; field, then a read buffer overrun can occur.&lt;/p&gt;&#xA;&lt;p&gt;The same thing can also occur during name constraints processing of certificates&#xA;(for example if a certificate has been directly constructed by the application&#xA;instead of loading it via the OpenSSL parsing functions, and the certificate&#xA;contains non NUL terminated ASN1_STRING structures). It can also occur in the&#xA;&lt;code&gt;X509_get1_email()&lt;/code&gt;, &lt;code&gt;X509_REQ_get1_email()&lt;/code&gt; and &lt;code&gt;X509_get1_ocsp()&lt;/code&gt; functions.&lt;/p&gt;&#xA;&lt;p&gt;If a malicious actor can cause an application to directly construct an&#xA;ASN1_STRING and then process it through one of the affected OpenSSL functions&#xA;then this issue could be hit. This might result in a crash (causing a Denial of&#xA;Service attack). It could also result in the disclosure of private memory&#xA;contents (such as private keys, or sensitive plaintext).&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/openssl-src/RUSTSEC-2021-0098.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/openssl-src/RUSTSEC-2021-0098.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry></feed>