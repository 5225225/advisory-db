<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2021-09-08T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle>Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2021-0100: Vulnerability in sha2</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0100.html</id><updated>2021-09-08T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0100.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0100: Vulnerability in sha2"/><published>2021-09-08T00:00:00+00:00</published><summary>Miscomputed results when using AVX2 backend</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0100&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Miscomputed results when using AVX2 backend&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-09-08&quot;&gt;&#xA;          September  8, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/sha2.html&quot;&gt;sha2&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/sha2&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;RustCrypto&amp;#x2f;hashes&amp;#x2f;pull&amp;#x2f;314&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;RustCrypto&amp;#x2f;hashes&amp;#x2f;pull&amp;#x2f;314&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.8&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.7&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;cryptography&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;The v0.9.7 release of the &lt;code&gt;sha2&lt;/code&gt; crate introduced a new AVX2-accelerated&#xA;backend which was automatically enabled for all x86/x86_64 CPUs where AVX2&#xA;support was autodetected at runtime.&lt;/p&gt;&#xA;&lt;p&gt;This backend was buggy and would miscompute results for long messages&#xA;(i.e. messages spanning multiple SHA blocks).&lt;/p&gt;&#xA;&lt;p&gt;The crate has since been yanked, but any users who upgraded to v0.9.7 should&#xA;immediately upgrade to v0.9.8 and recompute any hashes which were previously&#xA;computed by v0.9.7.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/sha2/RUSTSEC-2021-0100.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/sha2/RUSTSEC-2021-0100.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0099: cosmos_sdk is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0099.html</id><updated>2021-08-25T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0099.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0099: cosmos_sdk is unmaintained"/><published>2021-08-25T00:00:00+00:00</published><summary>Crate has been renamed to `cosmrs`</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0099&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Crate has been renamed to &lt;code&gt;cosmrs&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-25&quot;&gt;&#xA;          August 25, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/cosmos_sdk.html&quot;&gt;cosmos_sdk&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/cosmos_sdk&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Unmaintained&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;cosmos&amp;#x2f;cosmos-rust&amp;#x2f;issues&amp;#x2f;113&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;cosmos&amp;#x2f;cosmos-rust&amp;#x2f;issues&amp;#x2f;113&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;The &lt;code&gt;cosmos_sdk&lt;/code&gt; crate, which provides a basic Rust SDK for the Cosmos ecosystem,&#xA;has rebranded to “CosmRS” in the spirit of other projects like CosmJS and CosmWasm.&lt;/p&gt;&#xA;&lt;p&gt;You can find the new home here:&lt;/p&gt;&#xA;&lt;p&gt;https://github.com/cosmos/cosmos-rust/tree/main/cosmrs&lt;/p&gt;&#xA;&lt;p&gt;The new crate name is &lt;code&gt;cosmrs&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;p&gt;https://crates.io/crates/cosmrs&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmos_sdk/RUSTSEC-2021-0099.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmos_sdk/RUSTSEC-2021-0099.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0098: Vulnerability in openssl-src</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0098.html</id><updated>2021-08-24T00:00:00+00:00</updated><category term="denial-of-service"/><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0098.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0098: Vulnerability in openssl-src"/><published>2021-08-24T00:00:00+00:00</published><summary>Read buffer overruns processing ASN.1 strings</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0098&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Read buffer overruns processing ASN.1 strings&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-24&quot;&gt;&#xA;          August 24, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/openssl-src.html&quot;&gt;openssl-src&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/openssl-src&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;denial-of-service&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-3712&quot;&gt;CVE-2021-3712&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=111.16&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING&#xA;structure which contains a buffer holding the string data and a field holding&#xA;the buffer length. This contrasts with normal C strings which are represented as&#xA;a buffer for the string data which is terminated with a NUL (0) byte.&lt;/p&gt;&#xA;&lt;p&gt;Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL&apos;s&#xA;own &amp;quot;d2i&amp;quot; functions (and other similar parsing functions) as well as any string&#xA;whose value has been set with the ASN1_STRING_set() function will additionally&#xA;NUL terminate the byte array in the ASN1_STRING structure.&lt;/p&gt;&#xA;&lt;p&gt;However, it is possible for applications to directly construct valid ASN1_STRING&#xA;structures which do not NUL terminate the byte array by directly setting the&#xA;&amp;quot;data&amp;quot; and &amp;quot;length&amp;quot; fields in the ASN1_STRING array. This can also happen by&#xA;using the &lt;code&gt;ASN1_STRING_set0()&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;Numerous OpenSSL functions that print ASN.1 data have been found to assume that&#xA;the ASN1_STRING byte array will be NUL terminated, even though this is not&#xA;guaranteed for strings that have been directly constructed. Where an application&#xA;requests an ASN.1 structure to be printed, and where that ASN.1 structure&#xA;contains ASN1_STRINGs that have been directly constructed by the application&#xA;without NUL terminating the &amp;quot;data&amp;quot; field, then a read buffer overrun can occur.&lt;/p&gt;&#xA;&lt;p&gt;The same thing can also occur during name constraints processing of certificates&#xA;(for example if a certificate has been directly constructed by the application&#xA;instead of loading it via the OpenSSL parsing functions, and the certificate&#xA;contains non NUL terminated ASN1_STRING structures). It can also occur in the&#xA;&lt;code&gt;X509_get1_email()&lt;/code&gt;, &lt;code&gt;X509_REQ_get1_email()&lt;/code&gt; and &lt;code&gt;X509_get1_ocsp()&lt;/code&gt; functions.&lt;/p&gt;&#xA;&lt;p&gt;If a malicious actor can cause an application to directly construct an&#xA;ASN1_STRING and then process it through one of the affected OpenSSL functions&#xA;then this issue could be hit. This might result in a crash (causing a Denial of&#xA;Service attack). It could also result in the disclosure of private memory&#xA;contents (such as private keys, or sensitive plaintext).&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/openssl-src/RUSTSEC-2021-0098.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/openssl-src/RUSTSEC-2021-0098.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0097: Vulnerability in openssl-src</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0097.html</id><updated>2021-08-24T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0097.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0097: Vulnerability in openssl-src"/><published>2021-08-24T00:00:00+00:00</published><summary>SM2 Decryption Buffer Overflow</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0097&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;SM2 Decryption Buffer Overflow&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-24&quot;&gt;&#xA;          August 24, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/openssl-src.html&quot;&gt;openssl-src&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/openssl-src&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-3711&quot;&gt;CVE-2021-3711&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;www.openssl.org&amp;#x2f;news&amp;#x2f;secadv&amp;#x2f;20210824.txt&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=111.16&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;In order to decrypt SM2 encrypted data an application is expected to call the&#xA;API function &lt;code&gt;EVP_PKEY_decrypt()&lt;/code&gt;. Typically an application will call this&#xA;function twice. The first time, on entry, the &amp;quot;out&amp;quot; parameter can be NULL and,&#xA;on exit, the &amp;quot;outlen&amp;quot; parameter is populated with the buffer size required to&#xA;hold the decrypted plaintext. The application can then allocate a sufficiently&#xA;sized buffer and call &lt;code&gt;EVP_PKEY_decrypt()&lt;/code&gt; again, but this time passing a non-NULL&#xA;value for the &amp;quot;out&amp;quot; parameter.&lt;/p&gt;&#xA;&lt;p&gt;A bug in the implementation of the SM2 decryption code means that the&#xA;calculation of the buffer size required to hold the plaintext returned by the&#xA;first call to &lt;code&gt;EVP_PKEY_decrypt()&lt;/code&gt; can be smaller than the actual size required by&#xA;the second call. This can lead to a buffer overflow when &lt;code&gt;EVP_PKEY_decrypt()&lt;/code&gt; is&#xA;called by the application a second time with a buffer that is too small.&lt;/p&gt;&#xA;&lt;p&gt;A malicious attacker who is able present SM2 content for decryption to an&#xA;application could cause attacker chosen data to overflow the buffer by up to a&#xA;maximum of 62 bytes altering the contents of other data held after the&#xA;buffer, possibly changing application behaviour or causing the application to&#xA;crash. The location of the buffer is application dependent but is typically&#xA;heap allocated.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/openssl-src/RUSTSEC-2021-0097.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/openssl-src/RUSTSEC-2021-0097.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0096: spirv_headers is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0096.html</id><updated>2021-08-16T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0096.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0096: spirv_headers is unmaintained"/><published>2021-08-16T00:00:00+00:00</published><summary>spirv_headers is unmaintained, use spirv instead</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0096&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;spirv_headers is unmaintained, use spirv instead&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-16&quot;&gt;&#xA;          August 16, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/spirv_headers.html&quot;&gt;spirv_headers&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/spirv_headers&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Unmaintained&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;gfx-rs&amp;#x2f;rspirv&amp;#x2f;issues&amp;#x2f;197&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;gfx-rs&amp;#x2f;rspirv&amp;#x2f;issues&amp;#x2f;197&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;Because of versioning issues; the &lt;code&gt;spirv_headers&lt;/code&gt; crate is unmaintained. Use &lt;a href=&quot;https://crates.io/crates/spirv&quot;&gt;spirv&lt;/a&gt;&#xA;for parsing spirv files.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/spirv_headers/RUSTSEC-2021-0096.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/spirv_headers/RUSTSEC-2021-0096.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0082: Unsoundness in vec-const</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0082.html</id><updated>2021-08-14T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0082.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0082: Unsoundness in vec-const"/><published>2021-08-14T00:00:00+00:00</published><summary>vec-const attempts to construct a Vec from a pointer to a const slice</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0082&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;vec-const attempts to construct a Vec from a pointer to a const slice&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-08-14&quot;&gt;&#xA;          August 14, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/vec-const.html&quot;&gt;vec-const&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/vec-const&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Unsound&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-corruption&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Eolu&amp;#x2f;vec-const&amp;#x2f;issues&amp;#x2f;1#issuecomment-898908241&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;Eolu&amp;#x2f;vec-const&amp;#x2f;issues&amp;#x2f;1#issuecomment-898908241&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-safety&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;This crate claims to construct a const &lt;code&gt;Vec&lt;/code&gt; with nonzero length and capacity, but that cannot be done because such a &lt;code&gt;Vec&lt;/code&gt; requires a pointer from an allocator.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/vec-const/RUSTSEC-2021-0082.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/vec-const/RUSTSEC-2021-0082.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0093: Vulnerability in crossbeam-deque</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0093.html</id><updated>2021-07-30T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0093.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0093: Vulnerability in crossbeam-deque"/><published>2021-07-30T00:00:00+00:00</published><summary>Data race in crossbeam-deque</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0093&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Data race in crossbeam-deque&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-07-30&quot;&gt;&#xA;          July 30, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/crossbeam-deque.html&quot;&gt;crossbeam-deque&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/crossbeam-deque&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;memory-corruption&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            GHSA-pqqp-xmhj-wgcw&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;&#xA;            &#xA;            &#xA;            &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;cve.mitre.org&amp;#x2f;cgi-bin&amp;#x2f;cvename.cgi?name=CVE-2021-32810&quot;&gt;CVE-2021-32810&lt;/a&gt;&#xA;            &#xA;          &lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;crossbeam-rs&amp;#x2f;crossbeam&amp;#x2f;security&amp;#x2f;advisories&amp;#x2f;GHSA-pqqp-xmhj-wgcw&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;crossbeam-rs&amp;#x2f;crossbeam&amp;#x2f;security&amp;#x2f;advisories&amp;#x2f;GHSA-pqqp-xmhj-wgcw&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.4, &amp;lt;0.8.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.8.1&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug.&lt;/p&gt;&#xA;&lt;p&gt;Crates using &lt;code&gt;Stealer::steal&lt;/code&gt;, &lt;code&gt;Stealer::steal_batch&lt;/code&gt;, or &lt;code&gt;Stealer::steal_batch_and_pop&lt;/code&gt; are affected by this issue.&lt;/p&gt;&#xA;&lt;p&gt;Credits to @kmaork for discovering, reporting and fixing the bug.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/crossbeam-deque/RUSTSEC-2021-0093.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/crossbeam-deque/RUSTSEC-2021-0093.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0077: Vulnerability in better-macro</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0077.html</id><updated>2021-07-22T00:00:00+00:00</updated><category term="code-execution"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0077.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0077: Vulnerability in better-macro"/><published>2021-07-22T00:00:00+00:00</published><summary>`better-macro` has deliberate RCE to prove a point</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0077&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;better-macro&lt;/code&gt; has deliberate RCE to prove a point&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-07-22&quot;&gt;&#xA;          July 22, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/better-macro.html&quot;&gt;better-macro&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/better-macro&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;code-execution&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;raycar5&amp;#x2f;better-macro&amp;#x2f;blob&amp;#x2f;24ff1702397b9c19bbfa4c660e2316cd77d3b900&amp;#x2f;src&amp;#x2f;lib.rs#L36-L38&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;raycar5&amp;#x2f;better-macro&amp;#x2f;blob&amp;#x2f;24ff1702397b9c19bbfa4c660e2316cd77d3b900&amp;#x2f;src&amp;#x2f;lib.rs#L36-L38&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        no patched versions&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;rce&lt;/li&gt;&#xA;          &#xA;          &lt;li&gt;proc-macro&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;    &#xA;    &#xA;    &lt;dl&gt;&#xA;      &lt;dt&gt;Affected Functions&lt;/dt&gt;&#xA;      &lt;dd&gt;Version&lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;better_macro::println&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;1.0.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;    &lt;/dl&gt;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;&lt;a href=&quot;https://crates.io/crates/better-macro&quot;&gt;better-macro&lt;/a&gt; is a fake crate which is&#xA;&amp;quot;Proving A Point&amp;quot; that proc-macros can run arbitrary code. This a particularly&#xA;novel or interesting observation.&lt;/p&gt;&#xA;&lt;p&gt;It currently opens &lt;code&gt;https://github.com/raycar5/better-macro/blob/master/doc/hi.md&lt;/code&gt;&#xA;which doesn&apos;t appear to have any malicious content, but there&apos;s no guarantee that&#xA;will remain the case.&lt;/p&gt;&#xA;&lt;p&gt;This crate has no useful functionality, and should not be used.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/better-macro/RUSTSEC-2021-0077.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/better-macro/RUSTSEC-2021-0077.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0080: Vulnerability in tar</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0080.html</id><updated>2021-07-19T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2021-0080.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0080: Vulnerability in tar"/><published>2021-07-19T00:00:00+00:00</published><summary>Links in archive can create arbitrary directories</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0080&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Links in archive can create arbitrary directories&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-07-19&quot;&gt;&#xA;          July 19, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/tar.html&quot;&gt;tar&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/tar&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;alexcrichton&amp;#x2f;tar-rs&amp;#x2f;issues&amp;#x2f;238&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;alexcrichton&amp;#x2f;tar-rs&amp;#x2f;issues&amp;#x2f;238&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.36&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;    &#xA;    &#xA;    &lt;dl&gt;&#xA;      &lt;dt&gt;Affected Functions&lt;/dt&gt;&#xA;      &lt;dd&gt;Version&lt;/dd&gt;&#xA;      &#xA;      &lt;dt&gt;&lt;code&gt;tar::Archive::unpack&lt;/code&gt;&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;lt;0.4.36&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;    &lt;/dl&gt;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;When unpacking a tarball that contains a symlink the &lt;code&gt;tar&lt;/code&gt; crate may create&#xA;directories outside of the directory it&apos;s supposed to unpack into.&lt;/p&gt;&#xA;&lt;p&gt;The function errors when it&apos;s trying to create a file, but the folders are&#xA;already created at this point.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;use std::{io, io::Result};&#xA;use tar::{Archive, Builder, EntryType, Header};&#xA;&#xA;fn main() -&amp;gt; Result&amp;lt;()&amp;gt; {&#xA;    let mut buf = Vec::new();&#xA;&#xA;    {&#xA;        let mut builder = Builder::new(&amp;amp;mut buf);&#xA;&#xA;        // symlink: parent -&amp;gt; ..&#xA;        let mut header = Header::new_gnu();&#xA;        header.set_path(&amp;quot;symlink&amp;quot;)?;&#xA;        header.set_link_name(&amp;quot;..&amp;quot;)?;&#xA;        header.set_entry_type(EntryType::Symlink);&#xA;        header.set_size(0);&#xA;        header.set_cksum();&#xA;        builder.append(&amp;amp;header, io::empty())?;&#xA;&#xA;        // file: symlink/exploit/foo/bar&#xA;        let mut header = Header::new_gnu();&#xA;        header.set_path(&amp;quot;symlink/exploit/foo/bar&amp;quot;)?;&#xA;        header.set_size(0);&#xA;        header.set_cksum();&#xA;        builder.append(&amp;amp;header, io::empty())?;&#xA;&#xA;        builder.finish()?;&#xA;    };&#xA;&#xA;    Archive::new(&amp;amp;*buf).unpack(&amp;quot;demo&amp;quot;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This has been fixed in https://github.com/alexcrichton/tar-rs/pull/259 and is&#xA;published as &lt;code&gt;tar&lt;/code&gt; 0.4.36. Thanks to Martin Michaelis (@mgjm) for discovering&#xA;and reporting this, and Nikhil Benesch (@benesch) for the fix!&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tar/RUSTSEC-2021-0080.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tar/RUSTSEC-2021-0080.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2021-0076: Vulnerability in libsecp256k1</title><id>https://rustsec.org/advisories/RUSTSEC-2021-0076.html</id><updated>2021-07-13T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2021-0076.html" rel="alternate" type="text/html" title="RUSTSEC-2021-0076: Vulnerability in libsecp256k1"/><published>2021-07-13T00:00:00+00:00</published><summary>libsecp256k1 allows overflowing signatures</summary><content type="html">  &lt;article&gt;&#xA;    &lt;header&gt;&#xA;      &lt;h1&gt;&#xA;        &#xA;        &#xA;        RUSTSEC-2021-0076&#xA;        &#xA;      &lt;/h1&gt;&#xA;      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;libsecp256k1 allows overflowing signatures&lt;/p&gt;&#xA;&lt;/span&gt;&#xA;    &lt;/header&gt;&#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;dl&gt;&#xA;      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;time datetime=&quot;2021-07-13&quot;&gt;&#xA;          July 13, 2021&#xA;        &lt;/time&gt;&#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &#xA;        &lt;a href=&quot;/packages/libsecp256k1.html&quot;&gt;libsecp256k1&lt;/a&gt;&#xA;          (&lt;a href=&quot;https://crates.io/crates/libsecp256k1&quot;&gt;crates.io&lt;/a&gt;)&#xA;        &#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        Vulnerability&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;crypto-failure&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &lt;a href=&quot;https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;paritytech&amp;#x2f;libsecp256k1&amp;#x2f;pull&amp;#x2f;67&quot;&gt;&#xA;          https:&amp;#x2f;&amp;#x2f;github.com&amp;#x2f;paritytech&amp;#x2f;libsecp256k1&amp;#x2f;pull&amp;#x2f;67&#xA;        &lt;/a&gt;&#xA;      &lt;/dd&gt;&#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;&#xA;      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;&#xA;      &lt;dd&gt;&#xA;        &#xA;        &#xA;        &lt;ul&gt;&#xA;          &#xA;          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0&lt;/code&gt;&lt;/li&gt;&#xA;          &#xA;        &lt;/ul&gt;&#xA;        &#xA;      &lt;/dd&gt;&#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;    &lt;/dl&gt;&#xA;&#xA;    &#xA;&#xA;    &#xA;    &#xA;&#xA;    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;&#xA;    &lt;p&gt;libsecp256k1 accepts signatures whose R or S parameter is larger than the&#xA;secp256k1 curve order, which differs from other implementations. This could&#xA;lead to invalid signatures being verified.&lt;/p&gt;&#xA;&lt;p&gt;The error is resolved in 0.5.0 by adding a &lt;code&gt;check_overflow&lt;/code&gt; flag.&lt;/p&gt;&#xA;&#xA;&#xA;    &#xA;    &#xA;    &lt;h3 id=&quot;more&quot;&gt;More&lt;/h3&gt;&#xA;&#xA;    &lt;ul&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/libsecp256k1/RUSTSEC-2021-0076.md&quot;&gt;Advisory&#xA;          History&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;li&gt;&lt;a&#xA;          href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/libsecp256k1/RUSTSEC-2021-0076.md&quot;&gt;Edit&#xA;          Advisory&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &#xA;  &lt;/article&gt;</content></entry></feed>